<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.wms.mapper.StockIncomeBillMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.wms.domain.StockIncomeBill">
    <id column="id" property="id" />
    <result column="sn" property="sn" />
    <result column="vdate" property="vdate" />
    <result column="status" property="status" />
    <result column="totalAmount" property="totalAmount" />
    <result column="totalNumber" property="totalNumber" />
    <result column="auditTime" property="auditTime" />
    <result column="inputTime" property="inputTime" />
    <association column="inputUser_id" columnPrefix="inputUser_" javaType="Employee" property="inputUser">
      <id column="id" property="id" />
      <result column="name" property="name" />
    </association>
    <association column="auditor_id" columnPrefix="auditor_" javaType="Employee" property="auditor">
      <id column="id" property="id" />
      <result column="name" property="name" />
    </association>
    <association column="depot_id" columnPrefix="depot_" javaType="Depot" property="depot">
      <id column="id" property="id" />
      <result column="name" property="name" />
    </association>
    <collection property="items" column="id"
                select="cn.wolfcode.wms.mapper.StockIncomeBillItemMapper.selectItemsByBillId"/>
  </resultMap>
  <delete id="deleteByPrimaryKey">
    delete from stockIncomeBill
    where id = #{id}
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into stockIncomeBill (sn, vdate, status, totalAmount, totalNumber, auditTime,
      inputTime, inputUser_id, auditor_id, depot_id)
    values (#{sn}, #{vdate}, #{status}, #{totalAmount}, #{totalNumber}, #{auditTime},
      #{inputTime}, #{inputUser.id}, #{auditor.id}, #{depot.id})
  </insert>
  <update id="updateByPrimaryKey">
    update stockIncomeBill
    set sn = #{sn},
      vdate = #{vdate},
      totalAmount = #{totalAmount},
      totalNumber = #{totalNumber},
      auditor_id = #{auditor.id}
    where id = #{id}
  </update>
  <update id="audit">
    update stockIncomeBill set status=#{status},auditTime=#{auditTime},auditor_id=#{auditor.id} where id=#{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select
      bill.id,
      bill.sn,
      bill.vdate,
      bill.status,
      bill.totalAmount,
      bill.totalNumber,
      bill.auditTime,
      bill.inputTime,
      bill.inputUser_id,
      bill.auditor_id,
      bill.depot_id,
      s.id depot_id,
      s.name depot_name
      from stockIncomeBill bill
      join depot s on s.id=bill.depot_id
    where bill.id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, sn, vdate, status, totalAmount, totalNumber, auditTime, inputTime, inputUser_id,
    auditor_id, depot_id
    from stockIncomeBill
  </select>

  <select id="query4Count" resultType="int">
    select count(bill.id) FROM stockIncomeBill bill
    JOIN employee inputUser ON inputUser.id=bill.inputUser_id
    LEFT JOIN employee auditor ON auditor.id=bill.auditor_id
    JOIN depot depot ON depot.id=bill.depot_id
    <include refid="base_where"/>
  </select>
  <select id="query4List" resultMap="BaseResultMap">
    SELECT
	bill.id,
	bill.sn,
	bill.vdate,
	bill.status,
	bill.totalAmount,
	bill.totalNumber,
	bill.auditTime,
	bill.inputTime,
	inputUser.id inputUser_id,
	inputUser.name inputUser_name,
    auditor.id auditor_id,
	auditor.name auditor_name,
	depot.id depot_id,
	depot.name depot_name
    FROM stockIncomeBill bill
    JOIN employee inputUser ON inputUser.id=bill.inputUser_id
    LEFT JOIN employee auditor ON auditor.id=bill.auditor_id
    JOIN depot depot ON depot.id=bill.depot_id
    <include refid="base_where"/>
    limit #{start},#{pageSize}
  </select>
  <sql id="base_where">
    <where>
      <if test="beginDate != null">
        and bill.vdate &gt; #{beginDate}
      </if>
      <if test="endDate != null">
        and bill.vdate &lt; #{endDate}
      </if>
      <if test="depotId > 0">
        and bill.depot_id=#{depotId}
      </if>
      <if test="status >= 0">
        and bill.status=#{status}
      </if>
    </where>
  </sql>
</mapper>