<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.wms.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.wms.domain.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="age" property="age"/>
        <result column="admin" property="admin"/>
        <association property="dept" column="dept_id" columnPrefix="d_" javaType="Department">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
            <result column="sn" property="sn"/>
        </association>
        <collection property="roles" column="id"
                    select="cn.wolfcode.wms.mapper.RoleMapper.selectRleByEmployeeId"/>
    </resultMap>
    <delete id="deleteByPrimaryKey">
    delete from employee
    where id = #{id}
    </delete>
    <delete id="deleteRelation">
    delete from employee_role where employee_id = #{id}
    </delete>
    <delete id="batchDelete">
        delete from employee where id in
        <foreach collection="array" open="(" item="ele" separator="," close=")">
            #{ele}
        </foreach>
    </delete>
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into employee (name, password, email, age, admin, dept_id)
    values (#{name}, #{password}, #{email}, #{age}, #{admin}, #{dept.id})
  </insert>
    <insert id="insertRelation">
    insert into employee_role(employee_id,role_id)values(#{employeeId},#{roleId})
  </insert>
    <update id="updateByPrimaryKey">
    update employee
    set name = #{name},
      email = #{email},
      age = #{age},
      admin = #{admin},
      dept_id = #{dept.id}
    where id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        <include refid="base_sql"/>
        <include refid="base_table"/>
        where e.id = #{id}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <include refid="base_sql"/>
        <include refid="base_table"/>
    </select>
    <select id="query4Count" resultType="int">
        select count(e.id)
        <include refid="base_table"/>
    </select>
    <select id="query4List" resultMap="BaseResultMap">
        <include refid="base_sql"/>
        <include refid="base_table"/>
        <include refid="base_where"/>
        limit #{start},#{pageSize}
    </select>
    <select id="selectEmplyeeByInfo" resultType="Employee">
    select id,name, password, email, age, admin, dept_id from employee
     where name = #{username} and password = #{password}
    </select>

    <sql id="base_sql">
    select e.id, e.name, e.password, e.email, e.age, e.admin, e.dept_id,
    d.id d_id, d.name d_name
  </sql>
    <sql id="base_table">
    from employee e left join department d on e.dept_id = d.id
  </sql>
    <sql id="base_where">
        <where>
            <if test="keyword != null">
                and (e.name like concat('%',#{keyword},'%') or e.email like concat('%',#{keyword},'%'))
            </if>
            <if test="deptId > 0">
                and e.dept_id = #{deptId}
            </if>
        </where>
    </sql>
</mapper>